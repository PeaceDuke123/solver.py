import re

def tokenize(expr):
    expr = expr.replace('-', '+-')
    return [t for t in re.findall(r'[+-]?[^+-]+', expr) if t]

def eval_expr(expr):
    expr = expr.replace(' ', '')
    while '(' in expr:
        expr = re.sub(r'\([^()]*\)', lambda m: str(eval_expr(m.group(0)[1:-1])), expr)
    return expr

def parse(expr):
    expr = eval_expr(expr)
    tokens = tokenize(expr)
    x_coeff, const = 0, 0

    for token in tokens:
        if 'x' in token:
            token = token.replace('*', '')
            if token in ['x', '+x']:
                x_coeff += 1
            elif token == '-x':
                x_coeff -= 1
            else:
                x_coeff += float(token.replace('x', ''))
        else:
            const += float(token)
    return x_coeff, const

def solve(equation):
    if '=' not in equation:
        print("❌ Уравнение должно содержать знак равенства")
        return
    if ' ' in equation:
        print("❌ Уберите все пробелы из уравнения")
        return

    left, right = equation.split('=')

    try:
        a1, b1 = parse(left)
        a2, b2 = parse(right)
        a = a1 - a2
        b = b2 - b1

        if a == 0:
            if b == 0:
                print("♾ Бесконечно много решений")
            else:
                print("∅ Нет решений")
        else:
            x = b / a
            print(f"✅ Решение: x = {x}")
    except Exception as e:
        print("❌ Ошибка:", e)

eq = input("Введи линейное уравнение без пробелов (например: 2*(x+3)-5=3*x-(4-x)):\n> ")
solve(eq)
